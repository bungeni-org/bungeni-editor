/*
 *  Copyright (C) 2012 Africa i-Parliaments
 * 
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

/*
 * BungeniIntegrationPanel.java
 *
 * Created on Oct 23, 2012, 10:14:48 AM
 */

package org.bungeni.extpanels.bungeni;

import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.SwingUtilities;
import org.apache.log4j.Logger;
import org.bungeni.editor.panels.impl.BaseClassForITabbedPanel;
import org.bungeni.extutils.FrameLauncher;
import org.bungeni.extutils.NotifyBox;
import org.bungeni.utils.BungeniDialog;

/**
 *
 * @author Ashok Hariharan
 */
    public class BungeniIntegrationPanel extends BaseClassForITabbedPanel {
   private static org.apache.log4j.Logger log = Logger.getLogger(BungeniIntegrationPanel.class.getName());
    /** Creates new form BungeniIntegrationPanel */
    public BungeniIntegrationPanel() {
        initComponents();
    }

    private boolean versionsDialog(String attachmentPageURL){
        BungeniDialog frm = new BungeniDialog(parentFrame, "Version", true );
        AttachmentVersionPanel panel = new AttachmentVersionPanel(frm, attachmentPageURL);
        frm.view(panel);
        return panel.proceed();
    }
    
    private boolean uploadDialog(String attachmentPageURL){
        String sFile = ooDocument.getDocumentURL();
        // 2nd we upload the bill and replace the existing attachment
        BungeniDialog frm = new BungeniDialog(parentFrame, "Upload a new version of the Attachment", true);
        AttachmentUploadPanel attPanel = new AttachmentUploadPanel(
                frm,
                ooDocument,
                attachmentPageURL, 
                sFile
                );
        attPanel.init();
        frm.view(attPanel);
        return attPanel.proceed();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabPaneBungeniDoc = new javax.swing.JTabbedPane();
        tabDocInfo = new javax.swing.JPanel();
        scrollInfo = new javax.swing.JScrollPane();
        txtTitle = new javax.swing.JTextArea();
        lblDocTitle = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        txtStatus = new javax.swing.JTextField();
        tabDocDesc = new javax.swing.JPanel();
        scrollDesc = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        cboTransit = new javax.swing.JComboBox();
        btnExport = new javax.swing.JButton();
        btnTransit = new javax.swing.JButton();
        lblWorkingDoc3 = new javax.swing.JLabel();
        txtAttType = new javax.swing.JTextField();
        checkIncludeMetadata = new javax.swing.JCheckBox();

        tabPaneBungeniDoc.setFont(new java.awt.Font("DejaVu Sans", 0, 10)); // NOI18N

        txtTitle.setEditable(false);
        txtTitle.setColumns(20);
        txtTitle.setFont(new java.awt.Font("DejaVu Sans", 0, 10)); // NOI18N
        txtTitle.setLineWrap(true);
        txtTitle.setRows(5);
        scrollInfo.setViewportView(txtTitle);

        lblDocTitle.setFont(new java.awt.Font("DejaVu Sans", 0, 10)); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/bungeni/extpanels/bungeni/Bundle"); // NOI18N
        lblDocTitle.setText(bundle.getString("BungeniIntegrationPanel.lblDocTitle.text")); // NOI18N

        lblStatus.setFont(new java.awt.Font("DejaVu Sans", 0, 10)); // NOI18N
        lblStatus.setText(bundle.getString("BungeniIntegrationPanel.lblStatus.text")); // NOI18N

        txtStatus.setEditable(false);
        txtStatus.setFont(new java.awt.Font("DejaVu Sans", 0, 10)); // NOI18N

        javax.swing.GroupLayout tabDocInfoLayout = new javax.swing.GroupLayout(tabDocInfo);
        tabDocInfo.setLayout(tabDocInfoLayout);
        tabDocInfoLayout.setHorizontalGroup(
            tabDocInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabDocInfoLayout.createSequentialGroup()
                .addGroup(tabDocInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDocTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStatus)
                    .addGroup(tabDocInfoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(tabDocInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scrollInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        tabDocInfoLayout.setVerticalGroup(
            tabDocInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabDocInfoLayout.createSequentialGroup()
                .addComponent(lblDocTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tabPaneBungeniDoc.addTab(bundle.getString("BungeniIntegrationPanel.tabDocInfo.TabConstraints.tabTitle"), tabDocInfo); // NOI18N

        txtDescription.setColumns(20);
        txtDescription.setFont(new java.awt.Font("DejaVu Sans", 0, 10)); // NOI18N
        txtDescription.setRows(5);
        scrollDesc.setViewportView(txtDescription);

        javax.swing.GroupLayout tabDocDescLayout = new javax.swing.GroupLayout(tabDocDesc);
        tabDocDesc.setLayout(tabDocDescLayout);
        tabDocDescLayout.setHorizontalGroup(
            tabDocDescLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        tabDocDescLayout.setVerticalGroup(
            tabDocDescLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollDesc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        tabPaneBungeniDoc.addTab(bundle.getString("BungeniIntegrationPanel.tabDocDesc.TabConstraints.tabTitle"), tabDocDesc); // NOI18N

        cboTransit.setFont(new java.awt.Font("DejaVu Sans", 0, 10)); // NOI18N

        btnExport.setFont(new java.awt.Font("DejaVu Sans", 0, 10)); // NOI18N
        btnExport.setText(bundle.getString("BungeniIntegrationPanel.btnExport.text")); // NOI18N
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        btnTransit.setFont(new java.awt.Font("DejaVu Sans", 0, 10)); // NOI18N
        btnTransit.setText(bundle.getString("BungeniIntegrationPanel.btnTransit.text")); // NOI18N
        btnTransit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransitActionPerformed(evt);
            }
        });

        lblWorkingDoc3.setFont(new java.awt.Font("DejaVu Sans", 0, 10)); // NOI18N
        lblWorkingDoc3.setText(bundle.getString("BungeniIntegrationPanel.lblWorkingDoc3.text")); // NOI18N

        txtAttType.setEditable(false);
        txtAttType.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        txtAttType.setText(bundle.getString("BungeniIntegrationPanel.txtAttType.text")); // NOI18N

        checkIncludeMetadata.setText(bundle.getString("BungeniIntegrationPanel.checkIncludeMetadata.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabPaneBungeniDoc)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnTransit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboTransit, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblWorkingDoc3, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkIncludeMetadata)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAttType, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnExport))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(tabPaneBungeniDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTransit)
                    .addComponent(cboTransit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblWorkingDoc3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtAttType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkIncludeMetadata)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnExport)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnTransitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransitActionPerformed
        // TODO add your handling code here:
        Transition transition = (Transition) this.cboTransit.getSelectedItem();

        BungeniDialog               dlg = new BungeniDialog(
                parentFrame, 
                "Transit Workflow - " + txtTitle.getText(), 
                true
                );
        BungeniTransitionConfirmationPanel  transPanel
                = new BungeniTransitionConfirmationPanel(dlg, ooDocument, transition, txtStatus.getText(), txtTitle.getText());
        transPanel.init();
        dlg.getContentPane().add(transPanel);
        dlg.pack();
        FrameLauncher.CenterFrame(dlg);
        dlg.setVisible(true);
        if (transPanel.getTransitionSuccessful()) {
            // if the transition is successful update 
            //the document transition information on this page
            updateTransitionsList();
            NotifyBox.infoTimed("Transition Info", "Transition Successful !", 2000);
        }
    }//GEN-LAST:event_btnTransitActionPerformed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        // TODO add your handling code here:
        String attachmentPageURL = ooDocument.getPropertyValue("PortalAttSource");
        // 1st we version the existing bill 
        if (versionsDialog(attachmentPageURL)) {
            if (uploadDialog(attachmentPageURL)) {
                 NotifyBox.infoTimed(
                        "Document Upload", 
                        "The Attachment was successfully versioned and uploaded to Bungeni", 
                        3000
                        );
            }
        }
        
    }//GEN-LAST:event_btnExportActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnTransit;
    private javax.swing.JComboBox cboTransit;
    private javax.swing.JCheckBox checkIncludeMetadata;
    private javax.swing.JLabel lblDocTitle;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblWorkingDoc3;
    private javax.swing.JScrollPane scrollDesc;
    private javax.swing.JScrollPane scrollInfo;
    private javax.swing.JPanel tabDocDesc;
    private javax.swing.JPanel tabDocInfo;
    private javax.swing.JTabbedPane tabPaneBungeniDoc;
    private javax.swing.JTextField txtAttType;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextField txtStatus;
    private javax.swing.JTextArea txtTitle;
    // End of variables declaration//GEN-END:variables

    @Override
    public void refreshPanel() {
       // do nothing
        loadDocumentInfo();
    }


    /**
     * Override the initialize call
     */
    @Override
    public void initialize(){
      loadDocumentInfo();
    }

    
    private void loadDocumentInfo(){
        this.txtTitle.setText(
                ooDocument.getPropertyValue("PortalAttTitle")
                );
        this.txtStatus.setText(
                ooDocument.getPropertyValue("PortalAttStatus")
                );
        this.txtAttType.setText(
                ooDocument.getPropertyValue("PortalAttType")
                );
        this.txtDescription.setText(
                ooDocument.getPropertyValue("PortalAttDesc")
                );
        this.cboTransit.setModel(
                new DefaultComboBoxModel(deserializeTransitions().toArray())
                );
    }
    
    private void updateTransitionsList(){
            SwingUtilities.invokeLater(new Runnable(){
                public void run() {
                    // update the combo box here 
                    String sAttURL = ooDocument.getPropertyValue("PortalAttSource");
                    List<Transition> transitions = BungeniServiceAccess.getInstance().getUpdatedTransitionsForAttachment(sAttURL);
                    cboTransit.setModel(new DefaultComboBoxModel(transitions.toArray()));
                }
            });

    }
    
    private List<Transition> deserializeTransitions(){
        List<Transition> transitions = new ArrayList<Transition>(0);
        /**
         *    See checkOdfDocument in BungeniServiceAccess for the below being 
         *    set on the document
         */
        int transCount = Integer.parseInt(ooDocument.getPropertyValue("PortalAttTransCount"));
        for(int i=1 ; i <= transCount; i++ ) {
           String snum = String.format("%02d", i);
           Transition trans = new Transition(
                    ooDocument.getPropertyValue("PortalAttTransName" + snum),
                    ooDocument.getPropertyValue("PortalAttTransURL" + snum)
                   );
           transitions.add(trans);
        }
       return transitions;
    }
    
    private void uploadToBungeni(){
      //
    }
}
