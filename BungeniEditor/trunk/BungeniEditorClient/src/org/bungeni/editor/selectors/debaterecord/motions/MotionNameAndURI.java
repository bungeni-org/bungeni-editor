/*
 * QuestionerName.java
 *
 * Created on August 12, 2008, 1:53 PM
 */

package org.bungeni.editor.selectors.debaterecord.motions;

import java.awt.Component;
import java.util.HashMap;
import org.bungeni.editor.selectors.BaseMetadataPanel;
import org.bungeni.ooo.OOComponentHelper;

/**
 *
 * @author  undesa
 */
public class MotionNameAndURI extends BaseMetadataPanel {

    /** Creates new form QuestionerName */
    public MotionNameAndURI() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNameOfPersonFrom = new javax.swing.JLabel();
        txtMotionName = new javax.swing.JTextField();
        lblPersonURI = new javax.swing.JLabel();
        txtMotionURI = new javax.swing.JTextField();

        lblNameOfPersonFrom.setFont(new java.awt.Font("DejaVu Sans", 0, 10)); // NOI18N
        lblNameOfPersonFrom.setText("Edit Name of Motion");
        lblNameOfPersonFrom.setName("lbl_person_name"); // NOI18N

        txtMotionName.setFont(new java.awt.Font("DejaVu Sans", 0, 10)); // NOI18N
        txtMotionName.setName("txt_person_name"); // NOI18N

        lblPersonURI.setFont(new java.awt.Font("DejaVu Sans", 0, 10)); // NOI18N
        lblPersonURI.setText("URI of Motion");
        lblPersonURI.setName("lbl_person_uri"); // NOI18N

        txtMotionURI.setEditable(false);
        txtMotionURI.setFont(new java.awt.Font("DejaVu Sans", 0, 10)); // NOI18N
        txtMotionURI.setName("txt_person_uri"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblNameOfPersonFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(txtMotionName, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
            .addComponent(lblPersonURI, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(txtMotionURI, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblNameOfPersonFrom)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMotionName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPersonURI)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMotionURI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblNameOfPersonFrom;
    private javax.swing.JLabel lblPersonURI;
    private javax.swing.JTextField txtMotionName;
    private javax.swing.JTextField txtMotionURI;
    // End of variables declaration//GEN-END:variables
public String getPanelName() {
        return getName();
    }

    public Component getPanelComponent() {
        return this;
    }


    @Override
    public boolean doCancel() {
        return true;
    }

    @Override
    public boolean doReset() {
        return true;
    }

    @Override
    public boolean preFullEdit() {
        return true;
    }

    @Override
    public boolean processFullEdit() {
         String editSectionName = getContainerPanel().getEditSectionName();
        if (editSectionName.length() > 0 ) {
            HashMap<String,String> sectionMeta = new HashMap<String,String>();
            sectionMeta.put("BungeniMotionName", this.txtMotionName.getText());
            sectionMeta.put("BungeniMotionURI", this.txtMotionURI.getText());
            getContainerPanel().getOoDocument().setSectionMetadataAttributes(editSectionName, sectionMeta);
            
        }
        return true;
    }

    @Override
    public boolean postFullEdit() {
        return true;
    }

    @Override
    public boolean preFullInsert() {
        return true;
    }

    @Override
    public boolean processFullInsert() {
        return true;
    }

    @Override
    public boolean postFullInsert() {
        return true;
    }

    @Override
    public boolean preSelectEdit() {
        return true;
    }

    @Override
    public boolean processSelectEdit() {
        return true;
    }

    @Override
    public boolean postSelectEdit() {
        return true;
    }

    @Override
    public boolean preSelectInsert() {
        return true;
    }

    @Override
    public boolean processSelectInsert() {
        OOComponentHelper ooDoc = getContainerPanel().getOoDocument();
        HashMap<String,String> sectionMeta = new HashMap<String,String>();
        String newSectionName = ((Main)getContainerPanel()).mainSectionName;
        sectionMeta.put("BungeniMotionName", this.txtMotionName.getText());
        sectionMeta.put("BungeniMotionURI", this.txtMotionURI.getText());
        ooDoc.setSectionMetadataAttributes(newSectionName, sectionMeta);        
        return true;
    }

    @Override
    public boolean postSelectInsert() {
       return true;
    }

    @Override
    public boolean validateSelectedEdit() {
        return true;
    }

    @Override
    public boolean validateSelectedInsert() {
        return true;
    }

    @Override
    public boolean validateFullInsert() {
        return true;
    }

    @Override
    public boolean validateFullEdit() {
        return true;
    }

        @Override
    protected void initFieldsSelectedEdit() {
        return;
    }

    @Override
    protected void initFieldsSelectedInsert() {
        return;
    }

    @Override
    protected void initFieldsInsert() {
        return;
    }

    @Override
    protected void initFieldsEdit() {
        return;
    }
    
       @Override
    public boolean doUpdateEvent(){
           /*
        HashMap<String,String> registryMap = BungeniRegistryFactory.fullConnectionString();  
        BungeniClientDB dbInstance = new BungeniClientDB(registryMap);
        String questionFrom = ((Main)getContainerPanel()).selectionData.get("QUESTION_FROM");
        dbInstance.Connect();
        QueryResults rs = dbInstance.QueryResults(GeneralQueryFactory.Q_FETCH_PERSON_BY_URI(questionFrom));
        dbInstance.EndConnect();
            String fullName = "";
            if (rs.hasResults()) {
                
                String[] firstName = rs.getSingleColumnResult("FIRST_NAME");
                String[] lastName = rs.getSingleColumnResult("LAST_NAME");
                if (firstName != null )
                    fullName = firstName[0];
                if (lastName != null ) 
                    fullName += " " + lastName[0];
            }

        this.txtMotionName.setText(fullName);
        this.txtMotionURI.setText(questionFrom);*/
               HashMap<String,String> selectionData = ((Main)getContainerPanel()).selectionData;   
        this.txtMotionName.setText(selectionData.get("MOTION_NAME"));
        this.txtMotionURI.setText(selectionData.get("MOTION_URI"));
        
        return true;
    }
}
