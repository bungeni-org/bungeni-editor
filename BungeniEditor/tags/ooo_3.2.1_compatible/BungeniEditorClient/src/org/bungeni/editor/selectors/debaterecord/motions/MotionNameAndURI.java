
package org.bungeni.editor.selectors.debaterecord.motions;

import java.awt.Component;
import java.util.HashMap;
import org.bungeni.editor.selectors.BaseMetadataPanel;
import org.bungeni.ooo.OOComponentHelper;

/**
 *
 * @author  Ashok Hariharan
 */
public class MotionNameAndURI extends BaseMetadataPanel {

        public static final String __PANEL_NAME__ = "MotionNameAndURI";

    /** Creates new form QuestionerName */
    public MotionNameAndURI() {
        super();
        initComponents();
    }

    private boolean validateMotionFields() {
         boolean bState = true;
         String sMotionName = this.txtMotionName.getText().trim();
         String sMotionURI = this.txtMotionURI.getText().trim();
         if (sMotionName.length() == 0 ) {
            this.addErrorMessage(txtMotionName, "Please enter the motion name");
            bState = false;
        }
        if (sMotionURI.length() == 0) {
            this.addErrorMessage(txtMotionURI, "Please enter the motion URI");
            bState = false;
        }
        return bState;
    }


    private void saveMetadata(String toSectionName){
        if (toSectionName.length() > 0 ) {
            OOComponentHelper ooDoc = getContainerPanel().getOoDocument();
            HashMap<String,String> sectionMeta = new HashMap<String,String>();
            sectionMeta.put("BungeniMotionName", this.txtMotionName.getText());
            sectionMeta.put("BungeniMotionURI", this.txtMotionURI.getText());
            ooDoc.setSectionMetadataAttributes(toSectionName, sectionMeta);
        }

    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always  regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNameOfPersonFrom = new javax.swing.JLabel();
        txtMotionName = new javax.swing.JTextField();
        lblPersonURI = new javax.swing.JLabel();
        txtMotionURI = new javax.swing.JTextField();

        lblNameOfPersonFrom.setFont(new java.awt.Font("DejaVu Sans", 0, 10));
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/bungeni/editor/selectors/debaterecord/motions/Bundle"); // NOI18N
        lblNameOfPersonFrom.setText(bundle.getString("MotionNameAndURI.lblNameOfPersonFrom.text")); // NOI18N
        lblNameOfPersonFrom.setName("lbl_person_name"); // NOI18N

        txtMotionName.setFont(new java.awt.Font("DejaVu Sans", 0, 10)); // NOI18N
        txtMotionName.setName("txt_person_name"); // NOI18N

        lblPersonURI.setFont(new java.awt.Font("DejaVu Sans", 0, 10));
        lblPersonURI.setText(bundle.getString("MotionNameAndURI.lblPersonURI.text")); // NOI18N
        lblPersonURI.setName("lbl_person_uri"); // NOI18N

        txtMotionURI.setFont(new java.awt.Font("DejaVu Sans", 0, 10)); // NOI18N
        txtMotionURI.setName("txt_person_uri"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblNameOfPersonFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(txtMotionName, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
            .addComponent(lblPersonURI, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(txtMotionURI, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblNameOfPersonFrom)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMotionName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPersonURI)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMotionURI))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblNameOfPersonFrom;
    private javax.swing.JLabel lblPersonURI;
    private javax.swing.JTextField txtMotionName;
    private javax.swing.JTextField txtMotionURI;
    // End of variables declaration//GEN-END:variables
public String getPanelName() {
        return getName();
    }

    public Component getPanelComponent() {
        return this;
    }


    @Override
    public boolean doCancel() {
        return true;
    }

    @Override
    public boolean doReset() {
        return true;
    }

    @Override
    public boolean preFullEdit() {
      return true;
    }

    @Override
    public boolean processFullEdit() {
         String editSectionName = getContainerPanel().getEditSectionName();
         editSectionName = editSectionName.trim();
         saveMetadata(editSectionName);
        return true;
    }

    @Override
    public boolean postFullEdit() {
        return true;
    }

    @Override
    public boolean preFullInsert() {
        return true;
    }

    @Override
    public boolean processFullInsert() {
        return true;
    }

    @Override
    public boolean postFullInsert() {
        return true;
    }

    @Override
    public boolean preSelectEdit() {
        return true;
    }

    @Override
    public boolean processSelectEdit() {
        return true;
    }

    @Override
    public boolean postSelectEdit() {
        return true;
    }

    @Override
    public boolean preSelectInsert() {
        return true;
    }

    @Override
    public boolean processSelectInsert() {
        String newSection = getContainerPanel().mainSectionName;
        newSection  = newSection.trim();
        saveMetadata(newSection);
        return true;
    }

    @Override
    public boolean postSelectInsert() {
       return true;
    }

    @Override
    public boolean validateSelectedEdit() {
                return validateMotionFields();
    }

    @Override
    public boolean validateSelectedInsert() {
        return validateMotionFields();
    }

    @Override
    public boolean validateFullInsert() {
        return true;
    }

    @Override
    public boolean validateFullEdit() {
                return validateMotionFields();
    }

        @Override
    protected void initFieldsSelectedEdit() {
        return;
    }

    @Override
    protected void initFieldsSelectedInsert() {
        return;
    }

    @Override
    protected void initFieldsInsert() {
        return;
    }

    @Override
    protected void initFieldsEdit() {
          String eSectionName = getContainerPanel().getEditSectionName();
        OOComponentHelper ooDoc = getContainerPanel().getOoDocument();
        HashMap<String,String> sectionMeta = ooDoc.getSectionMetadataAttributes(eSectionName);
        this.txtMotionName.setText(sectionMeta.get("BungeniMotionName"));
        this.txtMotionURI.setText(sectionMeta.get("BungeniMotionURI"));
         return;
    }
    
       @Override
    public boolean doUpdateEvent(){
               HashMap<String,String> selectionData = (getContainerPanel()).selectionData;   
        this.txtMotionName.setText(selectionData.get("MOTION_NAME"));
        this.txtMotionURI.setText(selectionData.get("MOTION_URI"));
        
        return true;
    }
}
